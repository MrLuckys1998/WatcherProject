from elasticsearch import Elasticsearch
from datetime import datetime, timedelta
from logger import logger

# Watcher: unique_terms_missing
# Descripción: Agrupa por un campo (ej: service.keyword) y alerta si alguno de los valores esperados no aparece.

{% if elastic_user and elastic_pass %}
es = Elasticsearch("{{ elastic_url }}", basic_auth=({{ elastic_user | tojson }}, {{ elastic_pass | tojson }}))
{% else %}
es = Elasticsearch("{{ elastic_url }}")
{% endif %}

def run():
    now = datetime.utcnow()
    since = now - timedelta(hours=1)

    result = es.search(index="{{ index }}", size=0, body={
        "query": {
            "range": {
                "{{ timestamp_field }}": {
                    "gte": since.isoformat(),
                    "lt": now.isoformat()
                }
            }
        },
        "aggs": {
            "unique_terms": {
                "terms": {
                    "field": "{{ terms_field }}.keyword",
                    "size": 100
                }
            }
        }
    })

    terms = [bucket['key'] for bucket in result['aggregations']['unique_terms']['buckets']]
    missing = [term for term in {{ expected_terms | tojson }} if term not in terms]
    if missing:
        logger.info(f"ALERTA: No se han detectado los términos esperados: {missing}")
